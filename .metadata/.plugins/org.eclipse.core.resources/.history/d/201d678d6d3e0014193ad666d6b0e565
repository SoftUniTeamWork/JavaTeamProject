package TeamAuburn.GameProject;

import java.applet.Applet;
import java.applet.AudioClip;
import java.io.File;
import java.io.IOException;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

public class Sound implements Runnable {
	
	private static final AudioClip hit = Applet.newAudioClip(Sound.class.getResource("sounds/hit.wav"));
	private static final AudioClip gameover = Applet.newAudioClip(Sound.class.getResource("sounds/gameover.wav"));
	private static final AudioClip scorePlus = Applet.newAudioClip(Sound.class.getResource("sounds/scorePlus.wav"));
	private static final AudioClip backgroundMusic = Applet.newAudioClip(Sound.class.getResource("sounds/JazzTip.wav"));
	private static final AudioClip select = Applet.newAudioClip(Sound.class.getResource("sounds/select.wav"));
	private static final AudioClip back =  Applet.newAudioClip(Sound.class.getResource("sounds/back.wav"));
	private static final AudioClip multiPlayerStart =  Applet.newAudioClip(Sound.class.getResource("sounds/computerStartGame.wav"));
	private static final AudioClip singlePlayerStart =  Applet.newAudioClip(Sound.class.getResource("sounds/powerup.wav"));
	
	public static void playBackGroundLooped() throws UnsupportedAudioFileException, IOException, LineUnavailableException {
		 File file = new File("sounds/JazzTip.wav");
		 AudioInputStream sound = AudioSystem.getAudioInputStream(file);
		 Clip clip;
         clip = AudioSystem.getClip();
         clip.open(sound);
         clip.loop(10);
	}
	
	public static void playSinglePlayerStart() {
		singlePlayerStart.play();
	}
	
	public static void playMultiStart() {
		multiPlayerStart.play();
	}
	
	public static void playSelectSound() {
		select.play();
	}
	
	public static void playBackSound() {
		back.play();
	}
	
	public static void playHitSound() {
		hit.play();
		
	}
	public static void playGameOverSound() {
		gameover.play();
	}
	
	public static void playScoreSound() {
		scorePlus.play();
	}
	
	public static void playBackgroundMusic() {
		
		backgroundMusic.play();
	
		
	}
	
    /*AudioClip clip; 
    public SoundOne(AudioClip clip)
    {
        this.clip=clip;
    }*/
    public void run() {
        hit.play();
    }
    
    
}


